Vagrant and Docker are both technologies which help in creating virtual environments. Vagrant is used for building and managing virtual environments, while Docker on the other hand is for the use of creating containers. When comparing Vagrant and Docker, one notable difference lies in relation to the resources that are used, set up, and overall approach. Docker is well known for being “light weight” in that it doesn’t need its own OS or network stack. Overall, less resources are used with Docker. Vagrant on the other hand could require more resources, as VMs can be spun up, which take more resources. 

    Though I don’t have much experience with it yet, I prefer Docker as I found the set up straightforward, and it was easy to implement. Being able to spin up and tear down containers easily is a huge plus when playing around with things at home, but would also be especially useful in a production setting, for scalability. When using Vagrant on my local computer when trying to build a test box, its start up took significantly longer, for a simple installation. From what I can tell about Vagrant, this is something that would be a lot more suitable in a development setting when using VMs, vs in productio. However, I did also find that Docker can be used as a provider for Vagrant, so this may also be similar to Kubernetes in container management.
